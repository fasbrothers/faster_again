{{ "style-header.css" | asset_url | stylesheet_tag }}
{{ "style-cart.css" | asset_url | stylesheet_tag }}

<div class="header__container">
  <button class="
      navigation__menu {% if template.name != "index" %} header__right-black {%
      endif %}
    ">
    {% render "menu-icon" %}
  </button>
  <div class="header__left">
    {% render "header__logo" %}
  </div>
  <div class="header__center">
    {% render "header_link" %}
  </div>
  <div class="header__right">
    {% render "header_icons" %}
  </div>
</div>
{% render "cart_ajax" %}

<script>
  // menu toggle
  const navToggle = document.querySelector(".navigation__menu");

  const links = document.querySelector(".header__center");

  navToggle.addEventListener("click", function () {
    links.classList.toggle("show__nav");
  });


  document.addEventListener("keydown", function (event) {
    if (event.key === "Escape") {
      document.querySelector(".cart").classList.remove("cart__open");
    }
  });
  document
    .querySelector(".cart__header-cancel")
    .addEventListener("click", (e) => {
      e.preventDefault();
      document.querySelector(".cart").classList.remove("cart__open");
    });

  document.querySelector(".header__bag").addEventListener("click", () => {
    getData();
    document.querySelector(".cart").classList.add("cart__open");
  });

    // function to remove the product from the cart, and update the cart qunatity
    document.querySelector(".cart__main").addEventListener("click", (e)=>{
      if(e.target.classList.contains("cart__checkout-remove")){
        e.preventDefault();
        removeItem(e.target.getAttribute("data-key"), e.target.parentElement)
      } else if(e.target.classList.contains("btn-increase")){
        updateCartValue("+", e.target)
      }
      else if(e.target.classList.contains("btn-decrease")){
        updateCartValue("-", e.target)
      }
    })
    // function to remove the product from the cart
    function removeItem(key, select){
      let formData = {
              "id": key,
              "quantity": 0,
    };
      fetch(window.Shopify.routes.root + 'cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
        body: JSON.stringify(formData)
      })
      .then(response => {
        return response.json();
      })
      .then(data=>{
        let totalValue = 0;
        data.items.forEach(element => {
          if(element.properties == null){
            totalValue+= (element.original_price * element.quantity) - element.total_discount
          }
          else if(element.properties._bundle_price){
            totalValue+= element.properties._bundle_price * element.quantity
          }else{
            totalValue += (element.original_price * element.quantity) - element.total_discount
          }
        });
        document.querySelector(".cart__footer-total").textContent = '$' + (totalValue / 100 ).toFixed(2);
        select.remove();
        if(!data.item_count){ empty_cart();  return }
      })
      .catch((error) => {
        console.error('Error:', error);
      })
    }
    // function to update the cart quantity
    function updateCartValue(symbol, select){
      let item = select.parentElement.parentElement;
      let key = item.querySelector(".cart__checkout-remove").getAttribute("data-key");
      let quantity = null;
      if(symbol == "+"){
        quantity = Number(select.previousElementSibling.textContent) + 1;
      }else{
        if(Number(select.nextElementSibling.textContent) > 1){
          quantity = Number(select.nextElementSibling.textContent) - 1;
        }else{
          removeItem(key, item)
           return;
        }
      }
      let formData = {
              "id": key,
              "quantity": quantity,
      };
      fetch(window.Shopify.routes.root + 'cart/change.js', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify(formData)
          })
          .then(res=>{
              res.json().then((changed)=>{
                let totalValue = 0;
                changed.items.forEach(element => {
                  if(element.properties == null){
                    totalValue+= (element.original_price * element.quantity) - element.total_discount
                  }
                  else if(element.properties._bundle_price){
                    totalValue+= element.properties._bundle_price * element.quantity
                  }else{
                    totalValue += (element.original_price * element.quantity) - element.total_discount
                  }
                });
                document.querySelector(".cart__footer-total").textContent = `$${(totalValue / 100).toFixed(2)}`;
                let current = changed.items.find((item)=>item.key === key);

                  if(quantity <= current.quantity){
                      if (symbol==="+"){
                        select.previousElementSibling.textContent = quantity;
                        getData()
                      } else{
                        select.nextElementSibling.textContent = quantity;
                        getData()
                      }
                      item.querySelector(".cart__checkout-price").textContent = `$${(current.original_line_price / 100).toFixed(2)}`;
                  }else{
                    return false
                  }
              })
          })
          .catch((error) => {
              console.error('Error:', error);
          });
    }
    function empty_cart() {
      document.querySelector(".cart__main").innerHTML = `
      <div class="empty_cart">
                  <p>Your Cart is Empty</p>
                  <a href="{{ routes.all_products_collection_url }}">Shop Best Sellers</a>
                  </div>
                  `;
        return
      }
    function getData(){
      let result =  fetch(window.Shopify.routes.root + 'cart.js', {
      method: 'GET',
    })
      .then(response => {
        return response.json();
      }).then(data => {
        let totalValue = 0;
        data.items.forEach(element => {
          if(element.properties == null){
            totalValue+= (element.original_price * element.quantity) - element.total_discount
          }
          else if(element.properties._bundle_price){
            totalValue+= element.properties._bundle_price * element.quantity
          }else{
            totalValue += (element.original_price * element.quantity) - element.total_discount
          }
        });
        document.querySelector(".cart__main").innerHTML = "";
        document.querySelector(".cart__footer-total").textContent = '$' + (totalValue / 100).toFixed(2);
        if(!data.item_count){ empty_cart(); return }
        document.querySelector(".cart__main").insertAdjacentHTML('afterbegin', data.items.map(item => {
          return `
          <div class="cart__checkout">
            <a href="${item.url}" class="cart__checkout-image">
              <img
                src="${item.featured_image.url}"
                alt="${item.product_title}"
                class="cart__checkout-img"
              />
            </a>
            <a class="cart__checkout-title" href="${item.url}">${item.title}</a>
            <p class="cart__checkout-variant">${item.variant_title}</p>
            <p class="cart__checkout-price">$${ item.properties == null ? (item.final_line_price / 100).toFixed(2) : item.properties._bundle_price ? (item.properties._bundle_price / 100).toFixed(2) : (item.final_line_price / 100).toFixed(2)}</p>
            <p class="${item.discounts.length !== 0 ? "cart__checkout-discount" : "cart__checkout-discount-none"}">${item.discounts.length !== 0 ? item.discounts[0].title : ""}</p>
            <button
                class="cart__checkout-remove"
                data-key="${item.key}"
              >
                {% render "remove" %}
              </button>
            <div class="cart__checkout-quantity">
              <button type="button" class="btn-decrease">{% render "minus" %}</button>
               <span  class= "cart__checkout-input">${item.quantity}</span>
              <button type="button" class="btn-increase">{% render "plus" %}</button>
            </div>
          </div>
          `
        }).join(''));
      })
      .catch((error) => {
        console.error('Error:', error);
      });
      return result;
    }
    document.querySelector(".cart").addEventListener("change", ()=>{
      getData()
    })
</script>

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "header",
  "settings": [
    {
      "type": "link_list",
      "id": "header_link_list",
      "label": "t:sections.header.settings.header__list"
    }
  ]
}
{% endschema %}
